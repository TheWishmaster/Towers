towers = {}
defences_left = {}
defences_right = {}
towers_coords_x = {}
towers_coords_y = {}
towers_rads = {}


function rebuild(self, args)
    msg.post(".", "acquire_input_focus")
	map = args[1]
	map_defence = args[4]
	delta = args[3]
	towers_number = args[2]
	if (towers_number == nil) then
		towers_number = 0
	end
	if (delta == nil) then
		delta = 0
	end
	if towers[1] ~= nil then
		go.delete_all(towers)
		go.delete_all(defences_left);
		go.delete_all(defences_right);
	end
	towers = {}
	defences_left = {}
	defences_right = {}
	towers_coords_x = {}
	towers_coords_y = {}
	towers_rads = {}
	delta = (delta + towers_number) % towers_number
	print(delta)
	for i, val in pairs(map) do
		local ang = (i - 1 - delta - 0.25 * towers_number) / towers_number * 2 * math.acos(-1.)
		local ang_next = (i - 1 - 0.25 * towers_number) / towers_number * 2 * math.acos(-1.)
		local ang1 = (i - 1 - delta - 0.25 * towers_number + 0.4) / towers_number * 2 * math.acos(-1.)
		local ang1_next = (i - 1 - 0.25 * towers_number + 0.4) / towers_number * 2 * math.acos(-1.)
		local ang2 = (i - 1 - delta - 0.25 * towers_number - 0.4) / towers_number * 2 * math.acos(-1.)
		local ang2_next = (i - 1 - 0.25 * towers_number - 0.4) / towers_number * 2 * math.acos(-1.)
		table.insert(towers, factory.create("#factorytow", 
			vmath.vector3(0, 0, 0), 
			nil, { owner = map[i],
			 x = 640 + 250 * math.cos(ang), y = 350 + 250 * math.sin(ang),
			 x_next = 640 + 250 * math.cos(ang_next), 
			 y_next = 350 + 250 * math.sin(ang_next),
			 angle = ang_next } ) )
		table.insert(towers_coords_x, 640 + 250 * math.cos(ang_next))
		table.insert(towers_coords_y, 350 + 250 * math.sin(ang_next))
		table.insert(towers_rads, 67)
		 
		if map_defence[i * 2 - 1] == 1 then
			table.insert(defences_left, factory.create("#factorydef", 
				vmath.vector3(0, 0, 0), 
				nil, { x = 640 + 250 * math.cos(ang2), y = 350 + 250 * math.sin(ang2),
				 x_next = 640 + 250 * math.cos(ang2_next), 
				 y_next = 350 + 250 * math.sin(ang2_next),
				 angle = ang2_next } ) )
		end
		 
		if map_defence[i * 2] == 1 then
			table.insert(defences_right, factory.create("#factorydef", 
				vmath.vector3(0, 0, 0), 
				nil, { x = 640 + 250 * math.cos(ang1), y = 350 + 250 * math.sin(ang1),
				 x_next = 640 + 250 * math.cos(ang1_next), 
				 y_next = 350 + 250 * math.sin(ang1_next),
				 angle = ang1_next } ) )
		end
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("rebuild") then
		rebuild(self, message)
	end
end

function on_input(self, action_id, action)
	if action_id == hash("click") and action.pressed then
		for i, val in pairs(towers_coords_x) do
			if math.sqrt((val - action.x) * (val - action.x) + (towers_coords_y[i] - action.y) * (towers_coords_y[i] - action.y)) < towers_rads[i] then
				local buf = {}
				table.insert(buf, i)
				msg.post("main:/controls#gui", "teleport", buf);
			end
		end
	end
end
