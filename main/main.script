towers = {}

function rebuild(self, args)
	map = args[1]
	towers_number = args[2]
	if (towers_number == nil) then
		towers_number = 0
	end
	if towers[1] ~= nil then
		go.delete_all(towers)
	end
	towers = {}
	for i, val in pairs(map) do
		local ang = (i - 2 - 0.25 * towers_number) / towers_number * 2 * math.acos(-1.)
		local ang_next = (i - 1 - 0.25 * towers_number) / towers_number * 2 * math.acos(-1.)
		print(ang)
		print(ang_next)
		table.insert(towers, factory.create("#factory", 
		vmath.vector3(0, 0, 0), 
		nil, { owner = map[i],
		 x = 640 + 220 * math.cos(ang), y = 350 + 220 * math.sin(ang),
		 x_next = 640 + 220 * math.cos(ang_next), 
		 y_next = 350 + 220 * math.sin(ang_next) } ) )
		--, x = 640 + 22 * math.cos(ang), y = 350 + 22 * math.sin(ang) } ) )
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("rebuild") then
		rebuild(self, message)
	end
end
